
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user has a specific role
    function hasRole(role) {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Helper function to get user data
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // =================================================================
    // Users Collection
    // =================================================================
    match /users/{userId} {
      // Admins can read any user profile.
      // Authenticated users can read their own profile.
      allow read: if hasRole('admin') || (isAuthenticated() && request.auth.uid == userId);
      
      // Any authenticated user can create their own document (e.g., on sign-up).
      // They can't set their own role.
      allow create: if isAuthenticated() && request.auth.uid == userId && !('role' in request.resource.data);

      // Users can update their own displayName.
      // Admins can update any user's data, including their role.
      allow update: if (isAuthenticated() && request.auth.uid == userId && request.resource.data.keys().hasOnly(['displayName'])) || hasRole('admin');
      
      // Only admins can delete users.
      allow delete: if hasRole('admin');
    }

    // =================================================================
    // Clients Collection (Simple CRM)
    // =================================================================
    match /clients/{clientId} {
      // Any authenticated user (sales_agent or admin) can read, create, update, or delete clients.
      allow read, write: if hasRole('admin') || hasRole('sales_agent');
    }

    // =================================================================
    // venueOS_modules & content_library Collections (Read-only catalogs for non-admins)
    // =================================================================
    match /venueOS_modules/{moduleId} {
      // Any authenticated user can read the module catalog.
      allow read: if isAuthenticated();
      // Only admins can create, update, or delete modules.
      allow write: if hasRole('admin');
    }
    
    match /content_library/{contentId} {
      // Any authenticated user can read the content library.
      allow read: if isAuthenticated();
      // Only admins can manage the content library.
      allow write: if hasRole('admin');
    }

    // =================================================================
    // Proposals Collection (Core logic)
    // =================================================================
    match /proposals/{proposalId} {
      // An authenticated user can read a proposal if they are an admin OR if they are the sales agent assigned to it.
      allow read: if hasRole('admin') || (isAuthenticated() && resource.data.salesAgentId == request.auth.uid);
      
      // A sales agent can create a proposal and must assign it to themselves.
      // An admin can create a proposal and assign it to any valid sales agent.
      allow create: if (hasRole('sales_agent') && request.resource.data.salesAgentId == request.auth.uid) ||
                       (hasRole('admin') && getUserData(request.resource.data.salesAgentId).role == 'sales_agent');
      
      // An admin can update any proposal.
      // A sales agent can only update their own proposals.
      // A sales agent cannot update critical fields like the salesAgentId or signed data once it's set.
      allow update: if hasRole('admin') || 
                       (isAuthenticated() && resource.data.salesAgentId == request.auth.uid &&
                        request.resource.data.salesAgentId == resource.data.salesAgentId && // Cannot change agent
                        resource.data.signatureData.status != 'signed'); // Cannot edit signed proposal
                        
      // Only admins can delete proposals.
      allow delete: if hasRole('admin');
    }
  }
}
